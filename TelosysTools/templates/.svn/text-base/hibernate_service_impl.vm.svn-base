/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
## ----------------------------------------------------------------------

## ----------------------------------------------------------------------

package ${target.javaPackageFromFolder($SRC)};

#foreach( $import in $entity.importsForKeyFields )
import $import;
#end

#if ( $entity.hasCompositePrimaryKey() )
import ${entity.fullName}Key ;
#end

import java.util.List;

import com.temperies.util.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import ${ROOT_PKG}.${entity.name.toLowerCase()}.dao.${entity.name}Dao;
import ${ROOT_PKG}.${entity.name.toLowerCase()}.model.${entity.name};
import ${ROOT_PKG}.${entity.name.toLowerCase()}.service.${entity.name}Service;
import ${ROOT_PKG}.${entity.name.toLowerCase()}.dto.${entity.name}Dto;
import ${ROOT_PKG}.dto.DefaultResponse;


/**
 * JPA implementation for basic persistence operations ( entity "${entity.name}" )
 * 
 * @author Telosys Tools Generator
 *
 */
#if($entity.keyAttributes[0].type=='int')#set($keyType='Integer')
#elseif($entity.keyAttributes[0].type=='long')#set($keyType='Long')
#end
#if ( $entity.hasCompositePrimaryKey() )
		#set( $primaryKeyType = "${entity.name}Key" )
	#elseif (!${entity.keyAttributes.empty})  
		#set( $primaryKeyType = $entity.keyAttributes[0].wrapperType )
	#else 
		#set( $primaryKeyType = "Integer" )
	#end

@Component("${entity.name.toLowerCase()}Service")
public class ${entity.name}ServiceImpl implements ${entity.name}Service{

	#set( $daoName = "${entity.name.toLowerCase()}Dao" )

	@Autowired
	${entity.name}Dao $daoName;
	
	@Override
	public void save(${entity.name} entity) {
		${daoName}.save(entity);
	}
	@Override
	public ${entity.name}  update(${entity.name} entity) {
		return ${daoName}.update(entity);

	}
	@Override
	public void delete(${entity.name} entity) {
		${daoName}.delete(entity);

	}
	
	@Override
	public List<${entity.name}> findAll() {
		return ${daoName}.findAll();
	}

	@Override
	public ${entity.name} getById($keyType id) {
		return ${daoName}.findOne(id);
	}
	@Override
	public void deleteById($keyType id) {
		${daoName}.deleteById(id);

	}
	@Override
	public DefaultResponse createOrUpdate(${entity.name}Dto dto) {
		DefaultResponse response = new DefaultResponse();
		try {
			${entity.name} ent = BeanUtils.mapper.map(dto, ${entity.name}.class);
			ent = this.update(ent);
			response.setId(ent.getId());
		} catch (Exception e) {
			response.setSuccess(false);
			response.setMessage(e.getMessage());
		}
		return response;
	}
	@Override
	public List<${entity.name}> findByName(String name){
		return ${daoName}.findByName(name);
	
	}

}
