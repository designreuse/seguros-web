/*
 * Created on $today.date ( Time $today.time )
 * Generated by $generator.name ( version $generator.version )
 */
#set( $entityPersistenceClass = "${entity.name}Service" )
#set( $entityMockClass        = "${entity.name}Mock" )
## TODO : $template.requiredVariable('ROOT_PKG')
package ${target.javaPackageFromFolder($TEST_SRC)};

import java.util.List;

import org.hamcrest.Matchers;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.MockitoAnnotations;

import ${ROOT_PKG}.${entity.name.toLowerCase()}.model.${entity.name};
##import ${ROOT_PKG}.${entity.name.toLowerCase()}.mock.$entityMockClass;
import ${ROOT_PKG}.${entity.name.toLowerCase()}.dao.${entity.name}Dao;
import ${ROOT_PKG}.${entity.name.toLowerCase()}.service.${entity.name}Service;
import ${ROOT_PKG}.${entity.name.toLowerCase()}.service.impl.${entity.name}ServiceImpl;


public class ${entity.name}DaoStandaloneTest {
	@Mock
	${entity.name}Dao ${entity.name.toLowerCase()}Dao;
	@InjectMocks
	${entity.name}Service ${entity.name.toLowerCase()}Service = new ${entity.name}ServiceImpl();

	@Before
	public void before() {
		List<${entity.name}> list = ${entity.name}Mock.createList(30);
		MockitoAnnotations.initMocks(this);
		Mockito.when(${entity.name.toLowerCase()}Dao.findAll()).thenReturn(list);
	}

	@Test
	public void findAll() {
		// call the main method you want to test
		List<${entity.name}> result = ${entity.name.toLowerCase()}Service.findAll();

		// MOCK ALERT: verify the method was called
		Mockito.verify(${entity.name.toLowerCase()}Dao).findAll();
		Assert.assertThat(result.size(), Matchers.is(30));
	}
}