Ext.define('app.view.polizas.List', {
	extend: 'Ext.grid.Panel',
	alias: 'widget.polizasList',
	requires:[
			 'app.view.companias.ComboBox', 
			 'app.view.secciones.ComboBox', 
			 'app.view.pagospolizas.ComboBox', 
			 'app.view.clientes.ComboBox'
    ],
	title: 'Polizas',
	store: 'Polizas',	
	editionMode:app.utils.EditionMode.ROW,
	initComponent: function() {
		var _this=this;
		if(this.editionMode==app.utils.EditionMode.ROW){
			this.plugins=[Ext.create('Ext.grid.plugin.RowEditing')];
		}
		if(this.columns==undefined){
			this.columns = [
			{hidden:true,dataIndex:'id'},
			{
				header: 'nroPoliza'
				,dataIndex: 'nroPoliza'
				,flex: 1
				,field: { xtype: 'textfield' }
				
			},
	        {
				header: 'endoso'
				,dataIndex: 'endoso'
				,flex: 1
				,field: { xtype: 'textfield' }
				
			},
//	        {
//				header: 'observaciones'
//				,dataIndex: 'observaciones'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'fVigDesde'
//				,dataIndex: 'fVigDesde'
//				,flex: 1
//				,field: { xtype: 'datefield' }
//				
//			},
//	        {
//				header: 'fVigHasta'
//				,dataIndex: 'fVigHasta'
//				,flex: 1
//				,field: { xtype: 'datefield' }
//				
//			},
//			{
//				header: 'Tipo Poliza'
//				,id: 'tipoPoliza.id'				
//				,flex: 1
//				,editor: { xtype: 'seccionesCombo' }				
//				,renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {				       
//				       return store.data.items[rowIndex].data.tipoPoliza.nombre;
//				}
//			},
//	        {
//				header: 'cantCuotas'
//				,dataIndex: 'cantCuotas'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'prima'
//				,dataIndex: 'prima'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'suma'
//				,dataIndex: 'suma'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'premio'
//				,dataIndex: 'premio'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'tipoPoliza'
//				,dataIndex: 'tipoPoliza'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
	        {
				header: 'bienACubrir'
				,dataIndex: 'bienACubrir'
				,flex: 1
				,field: { xtype: 'textfield' }
				
			},
//	        {
//				header: 'moneda'
//				,dataIndex: 'moneda'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
	        {
				header: 'riesgoACubrir'
				,dataIndex: 'riesgoACubrir'
				,flex: 1
				,field: { xtype: 'textfield' }
				
			},
//	        {
//				header: 'clasePoliza'
//				,dataIndex: 'clasePoliza'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'ubicacion'
//				,dataIndex: 'ubicacion'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'nroChasis'
//				,dataIndex: 'nroChasis'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'nroMotor'
//				,dataIndex: 'nroMotor'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'tipoCobertura'
//				,dataIndex: 'tipoCobertura'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
//	        {
//				header: 'fRegistracion'
//				,dataIndex: 'fRegistracion'
//				,flex: 1
//				,field: { xtype: 'datefield' }
//				
//			},
	        {
				header: 'orden'
				,dataIndex: 'orden'
				,flex: 1
				,field: { xtype: 'textfield' }
				
			}//,
//	        {
//				header: 'patente'
//				,dataIndex: 'patente'
//				,flex: 1
//				,field: { xtype: 'textfield' }
//				
//			},
			// combo candidate for companias
//			{
//				header: 'companias'
//				,id: 'companias.id'
//				,flex: 1
//				,editor: { xtype: 'companiasCombo' }				
//				,renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {				       
//				       return store.data.items[rowIndex].data.companias.nombre;
//				}
//			},				 
				// combo candidate for secciones
//			{
//				header: 'secciones'
//				,id: 'secciones.id'
//				,flex: 1
//				,editor: { xtype: 'seccionesCombo' }				
//				,renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {				       
//				       return store.data.items[rowIndex].data.secciones.nombre;
//				}
//			},				 
				// combo candidate for pagosPolizas
//			{
//				header: 'pagosPolizas'
//				,id: 'pagosPolizas.id'
//				,flex: 1
//				,editor: { xtype: 'pagospolizasCombo' }				
//				,renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {				       
//				       return store.data.items[rowIndex].data.pagosPolizas.name;
//				}
//			},				 
				// combo candidate for clientes
//			{
//				header: 'clientes'
//				,id: 'clientes.id'
//				,flex: 1
//				,editor: { xtype: 'clientesCombo' }				
//				,renderer: function(value, metaData, record, rowIndex, colIndex, store, view) {				       
//				       return store.data.items[rowIndex].data.clientes.nombre;
//				}
//			}		
			];
		
		}
		
		
		this.dockedItems = [{
            xtype: 'toolbar',
            items: [{
            	text: 'Refresh',
	    	    iconCls:'x-tbar-loading',
	    	    scope: this,
	    	    handler: function(){
	    			this.store.load();	
	    		}
	        	
	        },
            '->',{
                text: 'Add',
                itemId:'add',
                iconCls: 'icon-add'//,
				//handler: function(){
	            //    // empty record
				//	if(_this.editionMode==app.utils.EditionMode.ROW){					
		        //        _this.store.insert(0, new app.model.Polizas());
	            //    	polizasRowEditing.startEdit(0, 0);                
				//	}
                //
	            //}
            }, 
             {
                itemId: 'delete',
                text: 'Delete',
                iconCls: 'icon-delete',
                disabled: true
            }			
			]
        }]
        this.on('selectionchange', function(selModel, selections){
	        //this.down('#edit').setDisabled(selections.length === 0);
	        this.down('#delete').setDisabled(selections.length === 0);	        
	    });	    	
    	this.callParent(arguments);
	}
});

