/*
 * Created on 14 nov 2013 ( Time 17:20:05 )
 * Generated by Telosys Tools Generator ( version 2.0.6 )
 */
package com.lix.companias.dao.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.PostConstruct;

import org.hibernate.Criteria;
import org.hibernate.ScrollableResults;
import org.hibernate.criterion.MatchMode;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.lix.companias.dao.CompaniasDao;
import com.lix.companias.dto.CompaniasDto;
import com.lix.companias.model.Companias;
import com.lix.dao.AbstractHibernateDao;
import com.lix.util.BeanUtils;
import com.lix.web.Page;

/**
 * Basic persistence operations for entity "Companias"
 * 
 * 
 * @author Lisandro
 * 
 */
@Repository("companiasDao")
public class CompaniasDaoImpl extends AbstractHibernateDao<Companias, Integer>
		implements CompaniasDao {

	@PostConstruct
	public void setInstance() {
		setClazz(Companias.class);
	}

	@Override
	@Transactional
	public List<Companias> findByName(String name) {
		Criteria criteria = getCurrentSession().createCriteria(
				(Companias.class));
		criteria.add(Restrictions.like("nombre", name.toUpperCase(),
				MatchMode.ANYWHERE));
		return (List<Companias>) criteria.list();
	}

	@Override
	@Transactional
	public Page<CompaniasDto> findPage(CompaniasDto dto) {
		Page<CompaniasDto> page = new Page<CompaniasDto>();
		page.setPage(dto.getPage());
		Criteria criteria = getCriteria();
		// // TODO:add additional criteria
		//
		ScrollableResults scrollable = criteria.scroll();
		if (scrollable.last()) {
			page.setTotalCount(scrollable.getRowNumber() + 1);
		}
		criteria = getPaginationCriteria(dto, criteria);
		//
		List<CompaniasDto> data = new ArrayList<CompaniasDto>();
		for (Companias e : (List<Companias>) criteria.list()) {
			CompaniasDto ent = BeanUtils.copyProperties(e, CompaniasDto.class);
			data.add(ent);
		}
		page.setData(data);
		page.setSuccess(true);
		// // return (List<Modules>) criteria.list();
		return page;
	}
}
